:Namespace unittest
    GetTests←{ ⍝ ⍵ is a ref to a namespace containing functions called test_*
        tests←'Test_.+'⎕S'&'⍵.⎕NL ¯3
        tests←('.', ⍨⍕⍵)∘, ¨tests
        tests
    }

    ⍝ This function runs the tests
    ⍝ It takes 3 mandatory arguments [test_namespace] [verbose= 1|0] [stop=1|0]
    ∇ RunTests args ;testNS;stop;verbose;tests;pass;fail;FAIL_OK
        st←⎕AI[2] ⍝ Start time of execution of tests 
        ⎕←''
        :Section parseArguments ⍝ This section parses and verifies input arguments
            'missing or extra arguments. Correct usage is: [test_namespace] [verbose= 1|0] [stop=1|0]'⎕SIGNAL ((≢args)=3)↓11
            
            testNS←⊃args
            verbose←2⊃args
            stop←3⊃args
            
            :If verbose=1
                ⎕←'Options:'
                ⎕←(6⍴' '),'verbose:', verbose
                ⎕←(6⍴' '),'stop:', stop ⋄ ⎕←''
            :EndIf

            'Verbose can only be 0 or 1'⎕SIGNAL (verbose ∊ 0 1)↓11
            'Stop can only be 0 or 1'⎕SIGNAL (stop ∊ 0 1)↓11
        :EndSection
        
        :Section FetchTests
            tests←GetTests testNS
            :IF 0=≢tests
                'no tests found'⎕SIGNAL 11 
            :EndIf
        :EndSection
        
        :Section ExecuteTests
            tList←⍳≢tests
            r←(≢tList)⍴0
            pass←0 ⋄ fail←0
            FAIL_OK←'[FAIL]' '[OK]' ⍝ 1+bool will give fail and ok on 0 and 1

            :For i :In tList
                t←i⊃tests
                r[i]←⍎expr←t,' ⍬'

                :If (~r[i])∧stop
                    ⎕←t, ': ', FAIL_OK[1+r[i]]
                    ⎕←'Stopping on failure of:' ⋄ ⎕←(6⍴' '), expr
                    r←i↑r
                    :Leave
                :EndIf
                :If verbose
                    ⎕←t, ':', FAIL_OK[1+r[i]]
                :ElseIf ~r[i]
                    ⎕←t, ':', FAIL_OK[1+r[i]]
                :EndIf
            :EndFor
        :EndSection

        :Section EvalResult            
            pass←(+/,)r ⋄ fail←(≢r)-pass

            ⎕←''⋄⎕←'Tests completed: ', (≢r), 'ran,', fail, 'failed test,', pass, 'successes in', ((⎕AI[2]-st)÷1000), 's'⋄⎕←''
        :EndSection
    ∇

:EndNamespace