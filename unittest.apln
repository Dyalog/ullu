:Namespace unittest
    GetTests←{ ⍝ ⍵ is a ref to a namespace containing functions called test_*
        tests←'Test_.+'⎕S'&'⍵.⎕NL ¯3
        tests←('.', ⍨⍕⍵)∘, ¨tests
        tests
    }

    ⍝ This function runs the tests
    ⍝ It takes 3 mandatory arguments [test_namespace] [verbose= 1|0] [stop=1|0]
    ∇ RunTests args 
        st← ⎕TS ⍝ Start time of execution of tests 

        :Section parseArguments ⍝ This section parses and verifies input arguments
            :If (≢args)≠3 
                ⎕←'missing or extra arguments. Correct usage is: [test_namespace] [verbose= 1|0] [stop=1|0]'⎕SIGNAL 11
            :EndIf
            
            testNS←⊃args
            verbose←2⊃args
            stop←3⊃args
            
            :If verbose=1
                ⎕←''
                ⎕←'Options: '
                ⎕←'verbose: ', verbose
                ⎕←'stop: ', stop
                ⎕←''
            :EndIf

            :If ~verbose ∊ 0 1
                ⎕←'Verbose can only be 0 or 1'⎕SIGNAL 11
            :ElseIf ~stop ∊ 0 1
                ⎕←'Stop can only be 0 or 1'⎕SIGNAL 11
            :EndIf
        :EndSection
        
        :Section FetchTests
            tests←GetTests testNS
            :IF 0=≢tests
                ⎕←'no tests found'⎕SIGNAL 11 
            :EndIf
        :EndSection
        
        :Section ExecuteTests
            r←⍳≢tests
            pass←0 ⋄ fail←0
            FAIL_OK←'[FAIL]' '[OK]'

            :For i :In r
                t←i⊃tests
                r[i]←⍎t,' ⍬'

                :If r[i]
                    pass←pass+1
                :Else
                    fail←fail+1
                :EndIf

                :If r[i]=0
                    :If stop=1
                        ⎕←t, ': ', FAIL_OK[1+r[i]]
                        ⎕←'Stopping on failure of:' ⋄ ⎕←(6⍴' '),t
                        :Leave
                    :EndIf
                :EndIf
                :If verbose=1
                    ⎕←t, ': ', FAIL_OK[1+r[i]]
                :ElseIf r[i]=0
                    ⎕←t, ': ', FAIL_OK[1+r[i]]
                :EndIf
            :EndFor
        :EndSection

        ⎕←''
        ⎕←'Tests completed: ', fail, ' failed test, ', pass, 'successes',' in ', #.utils.TsToSeconds (⎕TS-st), 's'  
    ∇

:EndNamespace