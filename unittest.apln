:Namespace unittest
    GetTests←{ ⍝ ⍵ is a ref to a namespace containing functions called test_*
        ⍝ 'Not a test ns'⎕SIGNAL ('test_.+'⎕S'&'⍵.⎕NL)↓11
        tests←'Test_.+'⎕S'&'⍵.⎕NL ¯3
        tests←('.', ⍨⍕⍵)∘, ¨tests
        tests
    }

    ⍝ This function runs the tests
    ⍝ It takes 3 mandatory arguments [test_namespace] [verbose= 1|0] [stop=1|0]
    ∇ RunTests args ;testNS;tests;nPass;nFail;FAIL_OK
        st←⎕AI[2] ⍝ Start time of execution of tests 
        ⎕←''
        :Section parseArguments ⍝ This section parses and verifies input arguments
            'missing or extra arguments. Correct usage is: [test_namespace] [verbose= 1|0] [stop=1|0]'⎕SIGNAL ((≢args)=3)↓11
            
            testNS←⊃args
            verbose←2⊃args
            stop←3⊃args
            
            :If verbose
                ⎕←'Options:'
                ⎕←(6⍴' '),'verbose:', verbose
                ⎕←(6⍴' '),'stop:', stop ⋄ ⎕←''
            :EndIf

            'Verbose can only be 0 or 1'⎕SIGNAL (verbose ∊ 0 1)↓11
            'Stop can only be 0 or 1'⎕SIGNAL (stop ∊ 0 1)↓11
        :EndSection
        
        :Section FetchTests
            tests←GetTests testNS
            'no tests found'⎕SIGNAL (~(0=≢tests))↓11 
        :EndSection
        
        :Section ExecuteTests
            tList←⍳≢tests
            nPass←0 ⋄ nFail←0

            :For i :In tList
                ⎕←tests[i]
                t←i⊃tests
                r←⍎expr←t
            :EndFor
        :EndSection

        :Section EvalResult            
            nPass←(+/,)r ⋄ nFail←(≢r)-nPass

            ⎕←''⋄⎕←'Tests completed: ', (≢r), 'ran,', nFail, 'failed test,', nPass, 'successes in', ((⎕AI[2]-st)÷1000), 's'⋄⎕←''
        :EndSection
    ∇

:EndNamespace