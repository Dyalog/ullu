:Namespace union
    Assert←#.unittest.Assert

    model←{⍺,(∧/⍺≢¨⍵)/⍵}

    ∇ r←testDesc
      r←'for ',case,' & ⎕CT ⎕DCT ⎕FR:',⍕⎕CT ⎕DCT ⎕FR
    ∇

    ∇ {r}←test_union
      r←⍬
      RunVariations←model #.testfns._RunVariationsWithModel_∪
      ints←{ ⍝ ⍺ integers of size ⍵ (bits), excluding the booleans
          ⎕IO←0
          ⍺⍴0 1~⍨(2*⍵-1)-⍨?⍺⍴2*⍵
      }

      :For ct :In 0 1 10 0.1
          (⎕CT ⎕DCT)←ct×#.utils.(ct_default dct_default)
          :For fr :In 1 2
              ⎕FR←fr⊃#.utils.(fr_dbl fr_decf)
              ⎕IO←1
     
              quadparams←⎕CT ⎕DCT ⎕FR ⎕IO ⎕DIV
     
              data_bool←1 0
              data_i1←100 ints 8
              data_i2←100 ints 16
              data_i4←100 ints 32
              data_char1←'apl'
              data_char2←'⍺⍵÷'

              caselist←⎕NL ¯2
              caselist←caselist⌿⍨{'data_'⊃⍤⍷⍵}¨caselist
     
              :For case :In caselist
                  data←⍎case
                  desc←testDesc

                  r,←'Union (∪)' desc #.testfns.Assert((data model data)≡(data ∪ data))
              :EndFor

          :EndFor
      :EndFor
    ∇
:EndNamespace